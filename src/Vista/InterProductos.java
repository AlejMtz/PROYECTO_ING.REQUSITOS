/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;

import Controlador.Ctrl_Productos;
import Modelo.Productos;
import com.oracle.jrockit.jfr.Producer;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javafx.scene.paint.Color;
import javax.sound.midi.SysexMessage;
import javax.swing.JOptionPane;

/**
 *
 * @author LENOVO
 */
public class InterProductos extends javax.swing.JInternalFrame {

    int obtenerIdProovedoresCombo = 0;

    public InterProductos() {
        initComponents();
        this.setSize(400, 320);
        this.setTitle("Nuevo Producto");
        this.CargarComboProovedores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_nombre_producto = new javax.swing.JTextField();
        txt_cantidad_producto = new javax.swing.JTextField();
        txt_precio_producto = new javax.swing.JTextField();
        txt_descripcion_producto = new javax.swing.JTextField();
        jComboBox1_IVA = new javax.swing.JComboBox<>();
        jComboBox2_proovedor = new javax.swing.JComboBox<>();
        boton_guardar = new javax.swing.JButton();
        jComboBox2_proovedor1 = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(153, 153, 255));
        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Nuevo Producto");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Nombre:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Cantidad:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 60, -1));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Precio:");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Descripci√≥n:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 150, 80, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("IVA:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 180, -1, -1));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Proovedor:");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, -1, -1));
        getContentPane().add(txt_nombre_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 280, 25));
        getContentPane().add(txt_cantidad_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 90, 270, 25));
        getContentPane().add(txt_precio_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 120, 290, 25));
        getContentPane().add(txt_descripcion_producto, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 150, 260, 25));

        jComboBox1_IVA.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecciona IVA:", "No aplica", " " }));
        jComboBox1_IVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1_IVAActionPerformed(evt);
            }
        });
        getContentPane().add(jComboBox1_IVA, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 180, 310, -1));

        jComboBox2_proovedor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un proovedor:", " " }));
        getContentPane().add(jComboBox2_proovedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 260, -1));

        boton_guardar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        boton_guardar.setText("GUARDAR");
        boton_guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_guardarActionPerformed(evt);
            }
        });
        getContentPane().add(boton_guardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 250, -1, -1));

        jComboBox2_proovedor1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un proovedor:", " " }));
        getContentPane().add(jComboBox2_proovedor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 260, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1_IVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1_IVAActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1_IVAActionPerformed

    private void boton_guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_guardarActionPerformed

        Productos productos = new Productos();
        Ctrl_Productos controlProductos = new Ctrl_Productos();
        String iva = "";
        String proovedores = "";
        iva = jComboBox1_IVA.getSelectedItem().toString().trim();
        proovedores = jComboBox2_proovedor.getSelectedItem().toString().trim();

        //validar campos
        if (txt_nombre_producto.getText().equals("") || txt_precio_producto.getText().equals("") || txt_cantidad_producto.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "complete todos los campos");
            txt_nombre_producto.setBackground(java.awt.Color.red);
            txt_precio_producto.setBackground(java.awt.Color.red);
            txt_cantidad_producto.setBackground(java.awt.Color.red);
            txt_descripcion_producto.setBackground(java.awt.Color.red);

        } else {
            //consulta si el producto existe
            if (!controlProductos.existeProducto(txt_nombre_producto.getText().trim())) {
                if (iva.equalsIgnoreCase("Selecciona IVA:")) {
                    JOptionPane.showMessageDialog(null, "Selecciona IVA:");
                } else {
                    if (proovedores.equalsIgnoreCase("Seleccione un proovedor:")) {
                        JOptionPane.showMessageDialog(null, "Seleccione un proovedor:");
                    } else {
                        try {
                            productos.setNombreProducto(txt_nombre_producto.getText().trim());
                            productos.setCantidadProducto(Integer.parseInt(txt_cantidad_producto.getText().trim()));
                            String precioTXT = "";
                            double Precio = 0.0;
                            precioTXT = txt_precio_producto.getText().trim();
                            boolean aux = false;
                            //si el usuario ingresa ,(como) como punto decial, lo tranformamos
                            for (int i = 0; i < precioTXT.length(); i++) {
                                if (precioTXT.charAt(i) == ',') {
                                    String precioNuevo = precioTXT.replace(",", ".");
                                    Precio = Double.parseDouble(precioNuevo);
                                    aux = true;
                                }
                            }

                            //evaluar condicion
                            if (aux == true) {
                                productos.setPrecioProducto(Precio);
                            } else {
                                Precio = Double.parseDouble(precioTXT);
                                productos.setPrecioProducto(Precio);
                            }

                            productos.setDescripcionProducto(txt_descripcion_producto.getText().trim());
                            //porcentaje IVA
                            if (iva.equalsIgnoreCase("No aplica")) {
                                productos.setPorcentajeIVA(0);
                            } //else if (iva.equalsIgnoreCase("16%")) {
                                //productos.setPorcentajeIVA(0);
                            //}
                            //idproovedor-cargar metodo que obtiene el id de proovedor
                            this.IdProovedores();
                            productos.setIdProovedor(obtenerIdProovedoresCombo);
                            productos.setEstado(1);

                            if (controlProductos.guardar(productos)) {
                                JOptionPane.showMessageDialog(null, "Registro guardado");
                                txt_nombre_producto.setBackground(java.awt.Color.green);
                                txt_precio_producto.setBackground(java.awt.Color.green);
                                txt_cantidad_producto.setBackground(java.awt.Color.green);
                                txt_descripcion_producto.setBackground(java.awt.Color.green);   
                                
                                this.CargarComboProovedores();
                                this.jComboBox1_IVA.setSelectedItem("Selecciona IVA:");
                                this.Limpiar();
                            } else {
                                 JOptionPane.showMessageDialog(null, "error al guardar");                   
                            }

                        } catch (HeadlessException | NumberFormatException e) {
                            System.err.println("Error en:"+e);
                        }
                    }
                }

            } else {
                JOptionPane.showMessageDialog(null, "Producto ya existente");
            }
        }
    }//GEN-LAST:event_boton_guardarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton boton_guardar;
    private javax.swing.JComboBox<String> jComboBox1_IVA;
    private javax.swing.JComboBox<String> jComboBox2_proovedor;
    private javax.swing.JComboBox<String> jComboBox2_proovedor1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField txt_cantidad_producto;
    private javax.swing.JTextField txt_descripcion_producto;
    private javax.swing.JTextField txt_nombre_producto;
    private javax.swing.JTextField txt_precio_producto;
    // End of variables declaration//GEN-END:variables

//metodo para limpiar campos
    private void Limpiar(){
        txt_nombre_producto.setText("");
        txt_cantidad_producto.setText("");
        txt_precio_producto.setText("");
        txt_descripcion_producto.setText("");
    }


//metodo para cargar los proovedores
    private void CargarComboProovedores() {
        Connection cn = conexion.conexionBD.conectar();
        String sql = "select * from proovedores";
        Statement st;

        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            jComboBox2_proovedor.removeAllItems();
            jComboBox2_proovedor.addItem("Seleccione un proovedor:");
            while (rs.next()) {
                jComboBox2_proovedor.addItem(rs.getString("nombre_proovedor"));
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al cargar proovedores");
        }
    }

    private int IdProovedores() {
        String sql = "select * from `proovedores` where `nombre_proovedor` = '" + this.jComboBox2_proovedor.getSelectedItem() + "'";
        Statement st;
        try {
            Connection cn = conexion.conexionBD.conectar();
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                obtenerIdProovedoresCombo = rs.getInt("id_proovedor");
            }
        } catch (SQLException e) {
            System.out.println("error al obtener id_proovedor");
        }
        return obtenerIdProovedoresCombo;
    }

}
